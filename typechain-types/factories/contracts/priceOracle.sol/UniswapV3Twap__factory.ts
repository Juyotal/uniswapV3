/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Twap,
  UniswapV3TwapInterface,
} from "../../../contracts/priceOracle.sol/UniswapV3Twap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_fee",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amountIn",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
    ],
    name: "estimateAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610c27380380610c278339818101604052608081101561003357600080fd5b5080516020808301516040808501516060958601516001600160601b031984881b81166080529682901b90961660a0528151630b4c774160e11b81526001600160a01b038085166004830152808316602483015262ffffff881660448301529251959693959194600093881692631698ee82926064808201939291829003018186803b1580156100c257600080fd5b505afa1580156100d6573d6000803e3d6000fd5b505050506040513d60208110156100ec57600080fd5b505190506001600160a01b038116610140576040805162461bcd60e51b81526020600482015260126024820152711c1bdbdb08191bd95cdb89dd08195e1a5cdd60721b604482015290519081900360640190fd5b6001600160601b031960609190911b1660c0525050505060805160601c60a05160601c60c05160601c610a7f6101a86000398060fe52806102f252508061015f5280610237528061054e52508060da528061012452806101d852806102115250610a7f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dfe16811461005157806316f0115b146100755780638f2e81991461007d578063d21220a7146100d0575b600080fd5b6100596100d8565b604080516001600160a01b039092168252519081900360200190f35b6100596100fc565b6100be6004803603606081101561009357600080fd5b5080356001600160a01b03169060208101356001600160801b0316906040013563ffffffff16610120565b60408051918252519081900360200190f35b61005961054c565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148061019357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b6101d4576040805162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614610235577f0000000000000000000000000000000000000000000000000000000000000000610257565b7f00000000000000000000000000000000000000000000000000000000000000005b6040805160028082526060820183529293506000929091602083019080368337019050509050838160008151811061028b57fe5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106102b457fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b8152600481018281528351602483015283516000936001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169363883bdbfd938793909283926044019185820191028083838b5b8381101561034557818101518382015260200161032d565b505050509050019250505060006040518083038186803b15801561036857600080fd5b505afa15801561037c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156103a557600080fd5b81019080805160405193929190846401000000008211156103c557600080fd5b9083019060208201858111156103da57600080fd5b82518660208202830111640100000000821117156103f757600080fd5b82525081516020918201928201910280838360005b8381101561042457818101518382015260200161040c565b505050509050016040526020018051604051939291908464010000000082111561044d57600080fd5b90830190602082018581111561046257600080fd5b825186602082028301116401000000008211171561047f57600080fd5b82525081516020918201928201910280838360005b838110156104ac578181015183820152602001610494565b505050509050016040525050505090506000816000815181106104cb57fe5b6020026020010151826001815181106104e057fe5b602002602001015103905060008663ffffffff168260060b816104ff57fe5b05905060008260060b12801561052957508663ffffffff168260060b8161052257fe5b0760060b15155b1561053357600019015b61053f81898b88610570565b9998505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061057c86610667565b90506001600160801b036001600160a01b038216116105eb576001600160a01b03808216800290848116908616106105cb576105c6600160c01b876001600160801b031683610999565b6105e3565b6105e381876001600160801b0316600160c01b610999565b92505061065e565b600061060a6001600160a01b0383168068010000000000000000610999565b9050836001600160a01b0316856001600160a01b0316106106425761063d600160801b876001600160801b031683610999565b61065a565b61065a81876001600160801b0316600160801b610999565b9250505b50949350505050565b60008060008360020b1261067e578260020b610686565b8260020b6000035b9050620d89e88111156106c4576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166106d857600160801b6106ea565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561071e576ffff97272373d413259a46990580e213a0260801c5b600482161561073d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561075c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561077b576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561079a576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156107b9576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156107d8576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156107f8576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610818576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610838576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610858576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610878576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610898576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156108b8576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156108d8576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156108f9576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610919576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610938576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610955576b048a170391f7dc42444e8fa20260801c5b60008460020b131561097057806000198161096c57fe5b0490505b640100000000810615610984576001610987565b60005b60ff16602082901c0192505050919050565b60008080600019858709868602925082811090839003039050806109cf57600084116109c457600080fd5b508290049050610a42565b8084116109db57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b939250505056fea2646970667358221220f8670e28d762ec9ec7c2453f155fb7d39570384bbe1e9daf08febcc69e8edca664736f6c63430007060033";

type UniswapV3TwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3TwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Twap__factory extends ContractFactory {
  constructor(...args: UniswapV3TwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    _fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Twap> {
    return super.deploy(
      _factory,
      _token0,
      _token1,
      _fee,
      overrides || {}
    ) as Promise<UniswapV3Twap>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    _fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _token0,
      _token1,
      _fee,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Twap {
    return super.attach(address) as UniswapV3Twap;
  }
  override connect(signer: Signer): UniswapV3Twap__factory {
    return super.connect(signer) as UniswapV3Twap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3TwapInterface {
    return new utils.Interface(_abi) as UniswapV3TwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Twap {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Twap;
  }
}
